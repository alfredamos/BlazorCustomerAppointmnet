

<div class="border">
    <div class="card-header text-center">
        <h1>Author Form</h1>
    </div>
    <div class="card-body">
        <EditForm Model="Customer">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="FirstName" class="form-label">First Name</label>
                <InputText @bind-Value="Customer.FirstName" class="form-control" placeholder="First Name" />
                <ValidationMessage For="@(() => Customer.FirstName)" />
            </div>
            <div class="form-group">
                <label for="LastName" class="form-label">Last Name</label>
                <InputText @bind-Value="Customer.LastName" class="form-control" placeholder="Last Name" />
                <ValidationMessage For="@(() => Customer.LastName)" />
            </div>
            <div class="form-group">
                <label for="Email" class="form-label">Email</label>
                <InputText @bind-Value="Customer.Email" class="form-control" placeholder="Email" />
                <ValidationMessage For="@(() => Customer.Email)" />
            </div>
            <div class="form-group">
                <label for="PhoneNumber" class="form-label">Phone Number</label>
                <InputText @bind-Value="Customer.PhoneNumber" class="form-control" placeholder="Phone Number" />
                <ValidationMessage For="@(() => Customer.PhoneNumber)" />
            </div>
            <div class="form-group">
                <label for="BirthDate" class="form-label">Birth Date</label>
                <InputDate @bind-Value="Customer.DateOfBirth" class="form-control" placeholder="Birth Date" />
                <ValidationMessage For="@(() => Customer.DateOfBirth)" />
            </div>
            <div class="form-group">
                <InputImage Label="Image" OnSelectedImage="OnSelectedImage" ImageURL="@imageURL" />
            </div>
        </EditForm>
    </div>
    <div class="card-footer">
        <div class="form-group">
            <button type="button" @onclick="UpsertCustomer" class="btn btn-outline-success btn-block" style="font-weight: bold">@UpsertButton</button>
            <button type="button" @onclick="CancelMethod" class="btn btn-outline-primary btn-block" style="font-weight: bold">@CancelButton</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public CustomerView Customer { get; set; } = new();

    [Parameter]
    public EventCallback UpsertCustomer { get; set; }

    [Parameter]
    public EventCallback CancelMethod { get; set; }

    [Parameter]
    public string UpsertButton { get; set; }

    [Parameter]
    public string CancelButton { get; set; }

    private string imageURL;

    protected override void OnInitialized()
    {

        if (!string.IsNullOrWhiteSpace(Customer.PhotoPath))
        {
            imageURL = Customer.PhotoPath;
            Customer.PhotoPath = null;
        }

    }

    private void OnSelectedImage(string imageBase64)
    {
        Customer.PhotoPath = imageBase64;
        imageURL = null;
    }
}