

<div class="border">
    <div class="card-header text-center">
        <h1>Author Form</h1>
    </div>
    <div class="card-body">
        <EditForm Model="CustomerSupport">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="FirstName" class="form-label">First Name</label>
                <InputText @bind-Value="CustomerSupport.FirstName" class="form-control" placeholder="First Name" />
                <ValidationMessage For="@(() => CustomerSupport.FirstName)" />
            </div>
            <div class="form-group">
                <label for="LastName" class="form-label">Last Name</label>
                <InputText @bind-Value="CustomerSupport.LastName" class="form-control" placeholder="Last Name" />
                <ValidationMessage For="@(() => CustomerSupport.LastName)" />
            </div>
            <div class="form-group">
                <label for="Role" class="form-label">Role</label>
                <InputText @bind-Value="CustomerSupport.Role" class="form-control" placeholder="Role" />
                <ValidationMessage For="@(() => CustomerSupport.Role)" />
            </div>                 
        </EditForm>
    </div>
    <div class="card-footer">
        <div class="form-group">
            <button type="button" @onclick="UpsertCustomerSupport" class="btn btn-outline-success btn-block" style="font-weight: bold">@UpsertButton</button>
            <button type="button" @onclick="CancelMethod" class="btn btn-outline-primary btn-block" style="font-weight: bold">@CancelButton</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public CustomerSupportView CustomerSupport { get; set; } = new();

    [Parameter]
    public EventCallback UpsertCustomerSupport { get; set; }

    [Parameter]
    public EventCallback CancelMethod { get; set; }

    [Parameter]
    public string UpsertButton { get; set; }

    [Parameter]
    public string CancelButton { get; set; }   
  
}